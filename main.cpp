#include "mappath.h"
using namespace std;

int main()
{
  
    //trafic amount in graph
     vector<vector<double>> trafic = {{0, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                      {1, 0, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                      {0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                      {0, 3, 2, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                      {0, 0, 0, 3, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                      {0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0},
                                      {0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                      {0, 0, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0},
                                      {0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2},
                                      {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0},
                                      {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 3, 3, 0},
                                      {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
                                      {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0},
                                      {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 2, 0, 0, 0},
                                      {0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0, 0, 0, 3},
                                      {0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 3, 0}};

    //distance amount in graph
    vector<vector<double>> dist = {{0, 0.2, 0.2, 0.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                   {0.2, 0, 1.4, 1.3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                   {0.2, 1.4, 0, 0.2, 0, 2.4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                   {0.2, 1.3, 0.2, 0, 2.1, 0, 1.9, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                   {0, 0, 0, 2.1, 0, 1.9, 2, 0.1, 0, 0, 0, 0, 0, 0, 0, 0},
                                   {0, 0, 2.4, 0, 1.9, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0},
                                   {0, 0, 0, 1.9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                   {0, 0, 0, 0, 0.1, 0, 0, 0, 0.1, 0.1, 0, 0, 0, 0, 3.5, 0},
                                   {0, 0, 0, 0, 0, 3, 0, 0.1, 0, 0, 0, 0, 0, 0, 0, 4.1},
                                   {0, 0, 0, 0, 0, 0, 0, 0.1, 0, 0, 2, 0, 1.1, 0, 0, 0},
                                   {0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.2, 0, 0.6, 0.8, 0},
                                   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2, 0, 0, 0, 0, 0},
                                   {0, 0, 0, 0, 0, 0, 0, 0, 0, 1.1, 0, 0, 0, 1.8, 0, 0},
                                   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.6, 0, 1.8, 0, 0, 0},
                                   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.8, 0, 0, 0, 0, 1.2},
                                   {0, 0, 0, 0, 0, 0, 0, 0, 4.1, 0, 0, 0, 0, 0, 1.2, 0}};
        
    // make an object
    mappath snap(dist, trafic);
    int command = 1;
    while (command < 3 && command > 0)
    {
        cout << endl;
        cout << "**************************" << endl;
        cout << "chose one option\n1-Shortestpath\n2-Bestpath\n3-Exit" << endl;
        cout << "**************************" << endl;
        cin >> command;
        if (command == 1)
        {
            snap.get_path(SHORTESTPATH);
        }
        else if (command == 2)
        {
            snap.get_path(BESTPATH);
        }
    }

    return 0;
}